'use strict';

var nock = require('nock'),
    fixtures = require('./fixtures'),
    assert = require('chai').assert,
    deepEquals = require('./utils').deepEquals,
    api = require('../src'),
    locationStream = api.locationStream,
    changeInLocationStream = api.changeInLocationStream;

var MAX_NUM_CHUNKS = 4;

describe('test', function () {
    it('location', function (done) {
        var response = fixtures.satellite();
        nock('https://api.wheretheiss.at')
            .get('/v1/satellites/25544')
            .times(MAX_NUM_CHUNKS + 1)
            .reply(200, response);
        var stream = locationStream();
        var numResponses = 0;
        var listener;
        listener = function (chunk) {
            var rawJson = chunk.toString('utf8'),
                data = JSON.parse(rawJson);
            assert(deepEquals(data, response), 'Should emit what is returned via http');
            numResponses++;
            if (numResponses == MAX_NUM_CHUNKS) {
                stream.removeListener('data', listener);
                stream.end();
            }
        };
        stream.on('data', listener);
        stream.on('end', done);
        stream.on('error', done);
    });
    it('location http error', function (done) {
        nock('https://api.wheretheiss.at')
            .get('/v1/satellites/25544')
            .times(1)
            .reply(500, {error: 'some error'});
        var stream = locationStream();
        var listener;
        listener = function () {
            stream.removeListener('data', listener);
            stream.end();
            done('Should not have received data');
        };
        stream.on('data', listener);
        stream.on('error', function () {
            done();
        });
    });
    it('location error', function (done) {
        var stream = locationStream();
        var listener;
        listener = function () {
            stream.removeListener('data', listener);
            stream.end();
            done('Should not have received data');
        };
        stream.on('data', listener);
        stream.on('error', function () {
            done();
        });
    });
    it('change in location', function (done) {
        var path = '/v1/satellites/25544';
        nock('https://api.wheretheiss.at')
            .get(path)
            .reply(200, fixtures.satellite({
                latitude: 10,
                longitude: 10,
                timestamp: 10000
            }))
            .get(path)
            .times(MAX_NUM_CHUNKS)
            .reply(200, fixtures.satellite({
                latitude: 12,
                longitude: 8,
                timestamp: 10010
            }));
        var stream = changeInLocationStream();
        var listener;
        listener = function (chunk) {
            var rawJson = chunk.toString('utf8');
            var data = JSON.parse(rawJson);
            assert.equal(data.latPerSec, 0.2);
            assert.equal(data.longPerSec, -0.2);
            stream.removeListener('data', listener);
            stream.end();
        };
        stream.on('data', listener);
        stream.on('end', done);
        stream.on('error', done);
    });

});